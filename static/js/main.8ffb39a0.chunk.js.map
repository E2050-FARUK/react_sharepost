{"version":3,"sources":["components/MediaCard.js","pages/Main.js","helper/customErrorHandler.js","firebase/firebase.utils.js","pages/Signup.js","pages/Signin.js","pages/ForgotPassword.js","helper/FetchData.js","helper/FormatDate.js","pages/UserDetail.js","components/UserPostCard.js","pages/UserPost.js","context/AuthContext.js","components/Navbar.js","components/Footer.js","Router/Router.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","margin","marginBottom","transition","boxShadow","transform","media","height","width","resizeMode","MediaCard","id","userImage","userName","userEmail","classes","history","useHistory","handleProfileClick","push","Card","className","CardActionArea","onClick","CardMedia","image","CardContent","Typography","noWrap","gutterBottom","variant","component","color","CardActions","Button","size","stylesFunc","theme","wrapper","display","flexDirection","minHeight","marginTop","textAlign","avatar","backgroundColor","palette","secondary","main","circular","Main","useState","userList","setUserList","mainStyles","process","REACT_APP_API_BASE_URL","REACT_APP_API_TOKEN","fetchData","a","axios","get","headers","response","data","useEffect","Container","Grid","container","spacing","map","user","item","lg","md","sm","xs","picture","capitalize","title","firstName","lastName","email","CircularProgress","customErrorHandler","err","code","config","firebase","apps","length","initializeApp","this","firebaseAuth","auth","displayName","password","createUserWithEmailAndPassword","currentUser","updateProfile","console","log","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithPopup","signInWithEmailAndPassword","signOut","sendPasswordResetEmail","window","location","href","signUpValidationSchema","Yup","shape","required","min","signUp","login","textDecoration","fontWeight","paddingLeft","Signup","formik","useFormik","initialValues","validationSchema","onSubmit","values","register","signupStyles","Avatar","handleSubmit","TextField","name","label","fullWidth","getFieldProps","error","touched","errors","helperText","type","useGoogleProvider","signInValidationSchema","primary","signIn","Signin","loginError","setLoginError","signinStyles","handleGoogleButtonClick","alert","then","res","handleChange","value","onChange","style","forgotPasswordValidationSchema","forgotPassword","ForgotPassword","forgotPasswordStyles","path","getUTCDate","dateString","Date","now","date","getUTCFullYear","getUTCMonth","getUTCHours","getUTCMinutes","formatDate","alignItems","justifyContent","borderRadius","content","padding","cta","textTransform","UserDetail","React","memo","styles","mediaStyles","useWideCardMediaStyles","textCardContentStyles","useN01TextInfoContentStyles","shadowStyles","useBouncyShadowStyles","useParams","userDetail","setUserDetail","catch","finally","cx","overline","phone","heading","body","country","street","city","state","registerDate","dateOfBirth","paddingTop","expand","marginLeft","transitions","create","duration","shortest","expandOpen","red","UserPostCard","userInitial","subheader","imgSrc","imgTitle","description","likes","expanded","setExpanded","comments","setComments","getComments","postId","CardHeader","aria-label","action","IconButton","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","comment","Fragment","owner","paragraph","message","UserPost","userPost","setUserPost","post","publishDate","parseISO","text","FirebaseAuthContext","createContext","AuthContextProvider","props","setCurrentUser","onAuthStateChanged","Provider","children","flexGrow","position","top","zIndex","menuButton","marginRight","accountCircle","Navbar","useContext","anchorEl","setAnchorEl","open","Boolean","handleHomeClick","useCallback","handleClose","handleSignOut","AppBar","Toolbar","edge","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Copyright","Link","getFullYear","footer","grey","StickyFooter","AppRouter","basename","exact","App","AuthContext","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ffb39a0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 300,\r\n    margin: \"auto\",\r\n    //marginRight:'10px',\r\n    marginBottom: \"30px\",\r\n    transition: \"0.3s\",\r\n    boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.5)\",\r\n    \"&:hover\": {\r\n      transform: \"scale(1.02)\",\r\n      boxShadow: \"0 20px 70px -13px rgba(0,0,0,0.5)\",\r\n    },\r\n  },\r\n  media: {\r\n    height: 300,\r\n    width: \"auto\",\r\n    resizeMode: \"contain\",\r\n  },\r\n});\r\n\r\nexport default function MediaCard({ id, userImage, userName, userEmail }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleProfileClick = () => {\r\n    history.push(`/user/${id}`);\r\n  };\r\n\r\n  const handleUserPostClick = () => {\r\n    history.push(`/user/${id}/post`);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={handleProfileClick}>\r\n        <CardMedia className={classes.media} image={userImage} />\r\n        <CardContent>\r\n          <Typography noWrap gutterBottom variant=\"h6\" component=\"h2\">\r\n            {userName}\r\n          </Typography>\r\n          <Typography noWrap variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {userEmail}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" onClick={handleProfileClick}>\r\n          View Full Profile\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\" onClick={handleUserPostClick}>\r\n          View User Posts\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nMediaCard.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  userImage: PropTypes.string,\r\n  userName: PropTypes.string,\r\n  userEmail: PropTypes.string,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  capitalize,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport MediaCard from \"../components/MediaCard\";\r\n\r\nconst stylesFunc = makeStyles((theme) => ({\r\n  wrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"100vh\",\r\n    maxWidth:\"85%\",\r\n    marginTop: \"5rem\",\r\n    marginBottom:\"2rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: \"1rem auto\",\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  circular:{\r\n    margin:'auto',\r\n  }\r\n}));\r\n\r\nfunction Main() {\r\n  const [userList, setUserList] = useState();\r\n  const mainStyles = stylesFunc();\r\n  const { REACT_APP_API_BASE_URL, REACT_APP_API_TOKEN } = process.env;\r\n\r\n  const fetchData = async () => {\r\n    const response = await axios.get(`${REACT_APP_API_BASE_URL}/user`, {\r\n      headers: {\r\n        \"app-id\": REACT_APP_API_TOKEN,\r\n      },\r\n    });\r\n    setUserList(response?.data?.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Container className={mainStyles.wrapper}>\r\n      {!userList ? (\r\n        //TODO: center loading icon\r\n        <CircularProgress className={mainStyles.circular}/>\r\n      ) : (\r\n        <Grid container spacing={1}>\r\n          {userList?.map((user) => {\r\n            return (\r\n              <Grid item lg={3} md={4} sm={6} xs={12} key={user?.id}>\r\n                <MediaCard\r\n                  id={user.id}\r\n                  userImage={user?.picture}\r\n                  userName={`${capitalize(user?.title)} ${user?.firstName} ${\r\n                    user?.lastName\r\n                  }`}\r\n                  userEmail={user?.email}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","export const customErrorHandler=(err=>{\r\n  \r\n    if(err.code===\"auth/user-not-found\"){\r\n        return \"There is no user with this email\" \r\n    }\r\n    if(err.code===\"auth/email-already-in-use\"){\r\n        return \"The email address is already in use.Please try with another email\"\r\n    }\r\n    if(err.code===\"auth/wrong-password\"){\r\n        return \"Wrong Password!! Please try again\"\r\n    }\r\n \r\n    \r\n});","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { customErrorHandler } from \"../helper/customErrorHandler\";\r\n//firestore\r\n\r\nconst devConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_ID,\r\n};\r\n\r\nconst prodConfig = {};\r\n\r\nconst config = process.env.NODE_ENV === \"development\" ? devConfig : prodConfig;\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    if (firebase.apps.length === 0) {\r\n      firebase.initializeApp(config);\r\n    }\r\n    this.firebaseAuth = firebase.auth();\r\n  }\r\n  // register registerWithEmailAndPassword\r\n  async register(displayName, email, password) {\r\n    try {\r\n      await this.firebaseAuth.createUserWithEmailAndPassword(email, password);\r\n      this.firebaseAuth.currentUser.updateProfile({\r\n        displayName,\r\n      });\r\n    } catch (err) {\r\n      console.log(\"F. Error:\", err);\r\n    }\r\n  }\r\n\r\n  // sign in/up with google GoogleAuthProvider\r\n  useGoogleProvider() {\r\n    const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n    googleProvider.setCustomParameters({ prompt: \"select_account\" });\r\n    this.firebaseAuth.signInWithPopup(googleProvider);\r\n  }\r\n\r\n  // login  signInWithEmailAndPassword\r\n  async signIn(email, password) {\r\n    try {\r\n      await this.firebaseAuth.signInWithEmailAndPassword(email, password);\r\n    } catch (error) {\r\n      return customErrorHandler(error);\r\n    }\r\n  }\r\n\r\n  // logout signOut\r\n  signOut() {\r\n    this.firebaseAuth.signOut();\r\n  }\r\n\r\n  // forgot password sendPasswordResetEmail\r\n  async forgotPassword(email) {\r\n    try {\r\n      await this.firebaseAuth.sendPasswordResetEmail(email);\r\n      window.location.href = \"/\";\r\n    } catch (error) {\r\n      return customErrorHandler(error);\r\n    }\r\n  }\r\n}\r\n\r\nexport default new Firebase();\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Container,\r\n  Avatar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useFormik } from \"formik\";\r\nimport firebase from \"../firebase/firebase.utils\";\r\nimport * as Yup from \"yup\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\nconst signUpValidationSchema = Yup.object().shape({\r\n  displayName: Yup.string().required(\"Display Name is required!!\"),\r\n  email: Yup.string().email(\"Invalid Email\").required(\"Email is required!!\"),\r\n  password: Yup.string()\r\n    .required(\"No password provided.\")\r\n    .min(8, \"Password is too short - should be 8 chars minimum.\"),\r\n});\r\n\r\nconst stylesFunc = makeStyles((theme) => ({\r\n  wrapper: {\r\n    marginTop: \"3rem\",\r\n    height: \"calc(100vh - 19.0625rem)\",\r\n    textAlign: \"center\",\r\n    marginBottom: \"12rem\",\r\n  },\r\n  avatar: {\r\n    margin: \"1rem auto\",\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  signUp: {\r\n    margin: \"1rem\",\r\n  },\r\n  login: {\r\n    textDecoration: 'none',\r\n    fontWeight: '600',\r\n    paddingLeft : '0.5rem'\r\n  }  \r\n}));\r\n\r\nfunction Signup() {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      displayName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: signUpValidationSchema,\r\n    onSubmit: (values) => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      firebase.register(values.displayName, values.email, values.password);\r\n    },\r\n  });\r\n  const signupStyles = stylesFunc();\r\n\r\n  const handleGoogleButtonClick = () => {\r\n    firebase.useGoogleProvider();\r\n  };\r\n\r\n  return (\r\n    <Container className={signupStyles.wrapper} maxWidth=\"sm\">\r\n      <Avatar className={signupStyles.avatar}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography className={signupStyles.signUp} variant=\"h4\">\r\n        Sign Up\r\n      </Typography>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"displayName\"\r\n              label=\"Display Name\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              {...formik.getFieldProps(\"displayName\")}\r\n              error={formik.touched.displayName && formik.errors.displayName}\r\n              helperText={\r\n                formik.touched.displayName && formik.errors.displayName\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              {...formik.getFieldProps(\"email\")}\r\n              error={formik.touched.email && formik.errors.email}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              type=\"password\"\r\n              fullWidth\r\n              {...formik.getFieldProps(\"password\")}\r\n              error={formik.touched.password && formik.errors.password}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n              Register\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              onClick={handleGoogleButtonClick}\r\n            >\r\n              SignUp with Google\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <p>\r\n        Already have an account? <a className={signupStyles.login}  href=\"/login\"> Login.</a>\r\n      </p>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Container,\r\n  Avatar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport firebase from \"../firebase/firebase.utils\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nconst signInValidationSchema = Yup.object().shape({\r\n  email: Yup.string().email(\"Invalid Email\").required(\"Email is required!!\"),\r\n  password: Yup.string()\r\n    .required(\"No password provided.\")\r\n    .min(8, \"Password is too short - should be 8 chars minimum.\"),\r\n});\r\n\r\nconst stylesFunc = makeStyles((theme) => ({\r\n  wrapper: {\r\n    marginTop: \"3rem\",\r\n    height: \"calc(100vh - 19.0625rem)\",\r\n    textAlign: \"center\",\r\n    marginBottom:\"9rem\",\r\n  },\r\n  avatar: {\r\n    margin: \"1rem auto\",\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  signIn: {\r\n    margin: \"1rem\",\r\n  }, \r\n  register: {\r\n    textDecoration: 'none',\r\n    fontWeight: '600',\r\n    paddingLeft : '0.5rem'\r\n  }\r\n  \r\n}));\r\n\r\nconst initialValues = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nfunction Signin() {\r\n  const [loginError, setLoginError] = useState(null);\r\n  const history = useHistory();\r\n  const signinStyles = stylesFunc();\r\n\r\n  const handleGoogleButtonClick = () => {\r\n    firebase.useGoogleProvider();\r\n    alert('You are succesfully logged in!');\r\n    history.push('/');\r\n  };\r\n\r\n  const handleFormSubmit = (values) => {\r\n    // alert(JSON.stringify(values, null, 2));\r\n    firebase.signIn(values.email, values.password).then((res) => {\r\n      if (res) {\r\n        setLoginError(res);\r\n        return;\r\n      }\r\n      history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container className={signinStyles.wrapper} maxWidth=\"sm\">\r\n      <Avatar className={signinStyles.avatar}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography className={signinStyles.signIn} variant=\"h4\">\r\n        Sign In\r\n      </Typography>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={signInValidationSchema}\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n        {({ handleSubmit, handleChange, values, errors }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  error={errors.email}\r\n                  helperText={errors.email}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                  fullWidth\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  error={errors.password}\r\n                  helperText={errors.password}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                >\r\n                  Login\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  onClick={handleGoogleButtonClick}\r\n                >\r\n                  Sign In with Google\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <p style={{ textAlign: \"center\", color: \"red\" }}>\r\n              <small>{loginError}</small>\r\n            </p>\r\n            {/* \r\n            //TODO: Add register & forgot password text & links\r\n            */}\r\n          </form>\r\n        )}\r\n      </Formik>\r\n      <p>\r\n        Don't have an account?      \r\n        <a className = {signinStyles.register} href=\"/register\">Register</a>\r\n      </p>\r\n            \r\n      <p>\r\n         <a className = {signinStyles.register} href=\"/forgot-password\">Forgot Password?</a>\r\n      </p>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Container,\r\n  Avatar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport firebase from \"../firebase/firebase.utils\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\nconst forgotPasswordValidationSchema = Yup.object().shape({\r\n  email: Yup.string().email(\"Invalid Email\").required(\"Email is required!!\"),\r\n});\r\n\r\nconst stylesFunc = makeStyles((theme) => ({\r\n  wrapper: {\r\n    marginTop: \"10rem\",\r\n    height: \"calc(100vh - 19.0625rem)\",\r\n    textAlign: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: \"1rem auto\",\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  forgotPassword: {\r\n    margin: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst initialValues = {\r\n  email: \"\",\r\n};\r\n\r\nfunction ForgotPassword() {\r\n  const [loginError, setLoginError] = useState(null);\r\n  const forgotPasswordStyles = stylesFunc();\r\n\r\n  const handleFormSubmit = (values) => {\r\n    firebase.forgotPassword(values.email).then(() => {});\r\n  };\r\n\r\n  return (\r\n    <Container className={forgotPasswordStyles.wrapper} maxWidth=\"sm\">\r\n      <Avatar className={forgotPasswordStyles.avatar}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography className={forgotPasswordStyles.forgotPassword} variant=\"h4\">\r\n        Forgot Password\r\n      </Typography>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={forgotPasswordValidationSchema}\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n        {({ handleSubmit, handleChange, values, errors }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  error={errors.email}\r\n                  helperText={errors.email}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <p style={{ textAlign: \"center\", color: \"red\" }}>\r\n              <small>{loginError}</small>\r\n            </p>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import axios from \"axios\";\r\nconst { REACT_APP_API_BASE_URL, REACT_APP_API_TOKEN } = process.env;\r\n\r\nexport const fetchData = async (path) => {\r\n  const response = await axios.get(`${REACT_APP_API_BASE_URL}${path}`, {\r\n    headers: {\r\n      \"app-id\": REACT_APP_API_TOKEN,\r\n    },\r\n  });\r\n  return response?.data;\r\n};\r\n","import { format as formatDate, parseISO } from \"date-fns\";\r\nexport const formatDateFunc = (date) => {\r\n  return formatDate(parseISO(date), \"MM/dd/yyyy HH:mm\");\r\n};\r\n\r\nexport const getUTCDate = (dateString = Date.now()) => {\r\n  const date = new Date(dateString);\r\n\r\n  return new Date(\r\n    date.getUTCFullYear(),\r\n    date.getUTCMonth(),\r\n    date.getUTCDate(),\r\n    date.getUTCHours(),\r\n    date.getUTCMinutes()\r\n    // date.getUTCSeconds()\r\n  );\r\n};\r\n\r\nformatDate(new Date(), \"MM/dd/yyyy HH:mm\"); // returns local time\r\nformatDate(getUTCDate(), \"MM/dd/yyyy HH:mm\"); // returns UTC time\r\n","import React, { useEffect, useState } from \"react\";\r\nimport cx from \"clsx\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { fetchData } from \"../helper/FetchData\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { getUTCDate } from \"../helper/FormatDate\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ChevronLeftRounded from \"@material-ui/icons/ChevronLeftRounded\";\r\nimport ChevronRightRounded from \"@material-ui/icons/ChevronRightRounded\";\r\nimport TextInfoContent from \"@mui-treasury/components/content/textInfo\";\r\nimport { useWideCardMediaStyles } from \"@mui-treasury/styles/cardMedia/wide\";\r\nimport { useN01TextInfoContentStyles } from \"@mui-treasury/styles/textInfoContent/n01\";\r\nimport { useBouncyShadowStyles } from \"@mui-treasury/styles/shadow/bouncy\";\r\nimport { Container, CircularProgress } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  wrapper: {\r\n    display: \"flex\",\r\n    minHeight: \"100vh\",\r\n    textAlign: \"center\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    maxWidth: \"85%\",\r\n    marginTop: \"5rem\",\r\n    marginBottom: \"2rem\",\r\n  },\r\n  circular: {\r\n    margin: \"auto\",\r\n  },\r\n  root: {\r\n    maxWidth: 400,\r\n    margin: \"auto\",\r\n    boxShadow: \"none\",\r\n    borderRadius: 8,\r\n    marginTop: 24,\r\n  },\r\n  content: {\r\n    padding: 24,\r\n  },\r\n  cta: {\r\n    marginTop: 24,\r\n    textTransform: \"initial\",\r\n  },\r\n}));\r\n\r\nexport const UserDetail = React.memo(function NewsCard() {\r\n  const styles = useStyles();\r\n  const mediaStyles = useWideCardMediaStyles();\r\n  const textCardContentStyles = useN01TextInfoContentStyles();\r\n  const shadowStyles = useBouncyShadowStyles();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const handlePostButtonClick = () => {\r\n    history.push(`/user/${id}/post`);\r\n  };\r\n  const handleBackButtonClick = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const [userDetail, setUserDetail] = useState();\r\n\r\n  useEffect(() => {\r\n    fetchData(`/user/${id}`)\r\n      .then((res) => setUserDetail(res))\r\n      .catch((err) => console.log(err))\r\n      .finally();\r\n  }, [id]);\r\n  //console.log(userDetail);\r\n  return (\r\n    <Container className={styles.wrapper}>\r\n      {!userDetail == null ? (\r\n        <CircularProgress className={styles.circular} />\r\n      ) : (\r\n        <>\r\n          <Card className={cx(styles.root, shadowStyles.root)}>\r\n            <CardMedia classes={mediaStyles} image={userDetail?.picture} />\r\n            <CardContent className={styles.content}>\r\n              <TextInfoContent\r\n                classes={textCardContentStyles}\r\n                overline={\"Phone Number: \" + userDetail?.phone}\r\n                heading={\"Address: \"}\r\n                body={`${userDetail?.location?.country} / ${userDetail?.location?.street} ${userDetail?.location?.city} ${userDetail?.location?.state}  `}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n          <Card className={cx(styles.root, shadowStyles.root)}>\r\n            <CardContent className={styles.content}>\r\n              <TextInfoContent\r\n                classes={textCardContentStyles}\r\n                heading={userDetail?.firstName + \" \" + userDetail?.lastName}\r\n                body={`${userDetail?.firstName} lives in ${\r\n                  userDetail?.location?.country\r\n                } and \r\n                                            registered on ${getUTCDate(\r\n                                              userDetail?.registerDate\r\n                                            )}. \r\n                                            ${\r\n                                              userDetail?.firstName\r\n                                            }'s birthday is on ${getUTCDate(\r\n                  userDetail?.dateOfBirth\r\n                )}.`}\r\n              />\r\n              <Button\r\n                onClick={handlePostButtonClick}\r\n                color={\"primary\"}\r\n                fullWidth\r\n                className={styles.cta}\r\n              >\r\n                View {userDetail?.firstName} Posts.. <ChevronRightRounded />\r\n              </Button>\r\n              <Button\r\n                onClick={handleBackButtonClick}\r\n                color={\"primary\"}\r\n                fullWidth\r\n                className={styles.cta}\r\n              >\r\n                <ChevronLeftRounded /> Back to home..\r\n              </Button>\r\n            </CardContent>\r\n          </Card>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default UserDetail;\r\n\r\n//comment\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { fetchData } from \"../helper/FetchData\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\nexport default function UserPostCard({\r\n  id,\r\n  userInitial,\r\n  title,\r\n  subheader,\r\n  imgSrc,\r\n  imgTitle,\r\n  description,\r\n  likes,\r\n}) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [comments, setComments] = useState();\r\n\r\n  const handleExpandClick = (postId) => {\r\n    if (!expanded) getComments(postId);\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const getComments = (postId) => {\r\n    fetchData(`/post/${postId}/comment`)\r\n      .then((res) => setComments(res?.data))\r\n      .catch()\r\n      .finally();\r\n  };\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            {userInitial}\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={title}\r\n        subheader={subheader}\r\n      />\r\n      <CardMedia className={classes.media} image={imgSrc} title={imgTitle} />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {`${likes} Likes`}\r\n        </Typography>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={() => handleExpandClick(id)}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          {!comments ? (\r\n            <CircularProgress />\r\n          ) : comments.length ? (\r\n            comments.map((comment) => {\r\n              return (\r\n                <React.Fragment key={comment.id}>\r\n                  <Typography variant=\"body2\">\r\n                    {comment.owner.firstName}\r\n                  </Typography>\r\n                  <Typography paragraph>{comment.message}</Typography>\r\n                  <hr />\r\n                </React.Fragment>\r\n              );\r\n            })\r\n          ) : (\r\n            \"No comment\"\r\n          )}\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n\r\nUserPostCard.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  userInitial: PropTypes.string,\r\n  title: PropTypes.string,\r\n  subheader: PropTypes.string,\r\n  imgSrc: PropTypes.string,\r\n  imgTitle: PropTypes.string,\r\n  description: PropTypes.string,\r\n  likes: PropTypes.bool,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchData } from \"../helper/FetchData\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Container, CircularProgress } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { formatDateFunc } from \"../helper/FormatDate\";\r\nimport UserPostCard from \"../components/UserPostCard\";\r\nimport { PostAdd } from \"@material-ui/icons\";\r\n\r\nconst stylesFunc = makeStyles((theme) => ({\r\n  wrapper: {\r\n    marginTop: \"10rem\",\r\n    minHeight: \"calc(100vh - 19.0625rem)\",\r\n    textAlign: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: \"1rem auto\",\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\nfunction UserPost() {\r\n  const { id } = useParams();\r\n  const mainStyles = stylesFunc();\r\n\r\n  const [userPost, setUserPost] = useState();\r\n\r\n  // TODO: fill in catch finally\r\n  useEffect(() => {\r\n    fetchData(`/user/${id}/post`)\r\n      .then((res) => setUserPost(res?.data))\r\n      .catch()\r\n      .finally();\r\n  }, [id]);\r\n\r\n  return (\r\n    <Container className={mainStyles.wrapper}>\r\n      {!userPost ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <Grid container spacing={1}>\r\n          {userPost?.map((post) => {\r\n            const { firstName, lastName } = post.owner;\r\n            return (\r\n              <Grid item sm={4} xs={6} key={post?.id}>\r\n                <UserPostCard\r\n                  id={post.id}\r\n                  userInitial={firstName[0]}\r\n                  title={`${firstName} ${lastName}`}\r\n                  subheader={formatDateFunc(post.publishDate)}\r\n                  imgSrc={post.image}\r\n                  imgTitle=\"Image Title\"\r\n                  description={post.text}\r\n                  likes={post.likes}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default UserPost;\r\n","import { createContext, useState, useEffect } from \"react\";\r\nimport firebase from \"../firebase/firebase.utils\";\r\n\r\nexport const FirebaseAuthContext = createContext();\r\n\r\nfunction AuthContextProvider(props) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n\r\n  useEffect(() => {\r\n    firebase?.firebaseAuth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <FirebaseAuthContext.Provider value={{ currentUser }}>\r\n      {props.children}\r\n    </FirebaseAuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AuthContextProvider;\r\n","import React, { useContext, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { FirebaseAuthContext } from \"../context/AuthContext\";\r\nimport firebase from \"../firebase/firebase.utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    position: \"sticky\",\r\n    top: 0,\r\n    zIndex: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  accountCircle: {\r\n    marginLeft: 5,\r\n  },\r\n}));\r\n\r\nexport default function Navbar() {\r\n  const { currentUser } = useContext(FirebaseAuthContext);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleHomeClick = useCallback(() => {\r\n    history.push(`/`);\r\n  }, []);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, []);\r\n\r\n  const handleSignOut = useCallback(() => {\r\n    firebase.signOut();\r\n    history.push(\"/login\");\r\n  }, []);\r\n\r\n  const handleLoginClick = () => {\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const handleRegisterClick = () => {\r\n    history.push(\"/register\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={handleHomeClick}\r\n          >\r\n            <HomeIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            React Share\r\n          </Typography>\r\n          {currentUser ? (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                {currentUser?.displayName}\r\n                <AccountCircle className={classes.accountCircle} />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                <MenuItem onClick={handleSignOut}>Sign Out</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <MenuItem onClick={handleLoginClick}>Sign in</MenuItem>\r\n              <MenuItem onClick={handleRegisterClick}>Sign up</MenuItem>\r\n            </>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        React Share\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2),\r\n    textAlign:'center'\r\n\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: \"auto\",\r\n    backgroundColor:\r\n      theme.palette.type === \"dark\"\r\n        ? theme.palette.grey[800]\r\n        : theme.palette.grey[200],\r\n  },\r\n}));\r\n\r\nexport default function StickyFooter() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div id=\"footer\" className = {classes.main}>\r\n      <footer className={classes.footer}>\r\n        <Container maxWidth=\"sm\">\r\n          <Typography variant=\"body1\">Address Virginia, USA.</Typography>\r\n          <Copyright />\r\n        </Container>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import { useContext } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Main from \"../pages/Main\";\r\nimport Signup from \"../pages/Signup\";\r\nimport Signin from \"../pages/Signin\";\r\nimport ForgotPassword from \"../pages/ForgotPassword\";\r\nimport UserDetail from \"../pages/UserDetail\";\r\nimport UserPost from \"../pages/UserPost\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Footer from \"../components/Footer\";\r\nimport { FirebaseAuthContext } from \"../context/AuthContext\";\r\n\r\nfunction AppRouter() {\r\n  const { currentUser } = useContext(FirebaseAuthContext);\r\n\r\n  return (\r\n    <Router basename=\"/react-sharepost\" >\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/register\" component={Signup} />\r\n        <Route exact path=\"/login\" component={Signin} />\r\n        <Route exact path=\"/forgot-password\" component={ForgotPassword} />\r\n        <Route\r\n          exact\r\n          path=\"/user/:id\"\r\n          component={currentUser ? UserDetail : Signin}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/user/:id/post\"\r\n          component={currentUser ? UserPost : Signin}\r\n        />\r\n        <Route path=\"/\" component={Main} />\r\n      </Switch>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default AppRouter;\r\n","import AppRouter from \"./Router/Router\";\r\nimport AuthContextProvider from \"./context/AuthContext\";\r\nfunction App() {\r\n  return (\r\n    <AuthContextProvider>\r\n      <AppRouter />\r\n    </AuthContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}